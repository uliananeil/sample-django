version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.2.1
  aws-ecs: circleci/aws-ecs@1.2.0

parameters:
  infrastructure:
    type: boolean
    default: false
  image:
    type: boolean
    default: false

jobs:
  - create_infrastructure:
      docker:
        - image: cimg/aws:2022.11
      steps:
        - checkout
        - run: |
            ./script.sh
            cd infrastructure
            wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt update && sudo apt install -y terraform
            terraform init -backend=true -backend-config="bucket=$STATE_BUCKET" -backend-config="key=terraform.tfstate" -backend-config="region=$REGION"
            terraform apply -auto-approve
            aws s3 cp ./private_ip.txt s3://${STATE_BUCKET}/

  - test_infrastructure:
      docker:
        - image: cimg/aws:2022.11
      steps:
        - run: |
            ./script.sh
            aws ecs describe-clusters --cluster $TF_VAR_cluster_name > cluster.json
            if grep -q '"status": "ACTIVE"' cluster.json; then exit 0; else exit 1; fi

  - build_and_push:
      machine:
        image: ubuntu-2204:2022.04.2
      steps:
        - checkout
        - run: |
            cd app
            aws s3 cp s3://${STATE_BUCKET}/private_ip.txt ./
            sed -i "s/<PRIVATE_IP>/$(cat private_ip.txt)/g" Dockerfile
            sed -i "s/<PASS>/$TF_VAR_rds_pass/g" Dockerfile
            sudo docker build -t ${TF_VAR_ecr_repo}:latest .
            aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 841962000336.dkr.ecr.us-east-1.amazonaws.com
            sudo docker push ${TF_VAR_ecr_repo}:latest .

  - image_test:
      machine:
        image: ubuntu-2204:2022.04.2
      steps:
        - checkout
        - run: |
            ./script.sh
            sudo wget https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.deb
            sudo apt install ./dive_0.9.2_linux_amd64.deb
            aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 841962000336.dkr.ecr.us-east-1.amazonaws.com
            sudo dive --ci ${TF_VAR_ecr_repo}:latest

  - deploy:
      machine:
        image: ubuntu-2204:2022.04.2
      steps:
        - checkout
        - run: |
            ./script.sh
            aws ecs update-service --cluster $TF_VAR_cluster_name --service $TF_VAR_service_name --force-new-deployment

workflows:
  infrastructure_deploy:
    when: << pipeline.parameters.infrastructure >>
    jobs:
      - create_infrastructure
  application_setup:
    when: << pipeline.parameters.image >>
    jobs:
      - test_infrastructure
      - build_and_push:
          requires:
            - test_infrastructure
      - image_test:
          requires:
            - build_and_push
      - hold_deploy:
          type: approval
          requires:
            - image_test
      - deploy:
          requires:
            - hold_deploy  



